services:
  api:
    image: vegangouda-api:latest
    environment:
      DATABASE_URL: postgres://testuser:testpassword@postgres:5432/vegangoudadb
    ports:
      - '3000:3000'
    networks:
      - webnet
      - dbnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role_api == true
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  web:
    image: vegangouda-web:latest
    ports:
      - '80:80'
    networks:
      - webnet
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.role_web == true
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: vegangoudadb
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpassword
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - dbnet
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role_db == true
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

networks:
  webnet:
  dbnet:

volumes:
  pgdata:
    driver: local