services:
  api:
    image: vegangouda-api:latest

    env_file:
      - .env
      - .env.local
      - .env.${NODE_ENV:-development}

    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://testuser:testpassword@postgres:5432/vegangoudadb}

    ports:
      - ${API_PORT:-3000}:3000
    networks:
      - webnet
      - dbnet
    deploy:
      replicas: ${API_REPLICAS:-1}
      update_config:
        parallelism: ${API_PARALLELISM:-1}
        delay: 10s
      restart_policy:
        condition: on-failure

  web:
    image: vegangouda-web:latest
    env_file:
      - .env
      - .env.local
      - .env.${NODE_ENV:-development}

    environment:
      - API_URL=${API_URL:-http://api:3000}

    ports:
      - ${WEB_PORT:-80}:80
    networks:
      - webnet
    deploy:
      replicas: ${WEB_REPLICAS:-1}
      update_config:
        parallelism: ${WEB_PARALLELISM:-1}
        delay: 10s
      restart_policy:
        condition: on-failure

  postgres:
    image: postgres:latest
    env_file:
      - .env
      - .env.local
      - .env.${NODE_ENV:-development}

    environment:
      POSTGRES_DB: ${POSTGRES_DB:-vegangoudadb}
      POSTGRES_USER: ${POSTGRES_USER:-testuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-testpassword}

    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    networks:
      - dbnet
    deploy:
      replicas: ${DB_REPLICAS:-1}
      update_config:
        parallelism: ${DB_PARALLELISM:-1}
        delay: 10s
      restart_policy:
        condition: on-failure

networks:
  webnet:
  dbnet:

volumes:
  pgdata:
    driver: local
