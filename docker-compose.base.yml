version: '3.8'

services:
  api:
    image: ${REGISTRY_IP_W_PORT}vegangouda-api:latest
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://testuser:testpassword@postgres:5432/vegangoudadb}
      JWT_SECRET: ${JWT_SECRET}
      SALT_KEY: ${SALT_KEY}
      POSTGRES_DB: ${POSTGRES_DB:-vegangoudadb}
      POSTGRES_USER: ${POSTGRES_USER:-testuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-testpassword}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      API_PORT: ${API_PORT:-3000}
      REDIS_URL: ${REDIS_URL:-redis://your_secure_password@redis:6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-your_secure_password}

    ports:
      - target: 3000
        published: ${API_PORT:-3000}
        protocol: tcp
        mode: ingress
    networks:
      - webnet
      - dbnet
    deploy:
      replicas: ${API_REPLICAS:-1}
      placement:
        constraints:
          - node.labels.role_api == true
      update_config:
        parallelism: ${API_PARALLELISM:-1}
        delay: 10s
      restart_policy:
        condition: on-failure

  web:
    image: ${REGISTRY_IP_W_PORT}vegangouda-web:latest
    environment:
      API_URL: ${API_URL:-http://api:3000}
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://api:3000}
      API_PORT: ${API_PORT:-3000}
      REACT_APP_API_PORT: ${REACT_APP_API_PORT:-3000}
    ports:
      - target: 80
        published: ${WEB_PORT:-80}
        protocol: tcp
        mode: ingress
    networks:
      - webnet
    deploy:
      replicas: ${WEB_REPLICAS:-1}
      placement:
        constraints:
          - node.labels.role_web == true
      update_config:
        parallelism: ${WEB_PARALLELISM:-1}
        delay: 10s
      restart_policy:
        condition: on-failure

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-vegangoudadb}
      POSTGRES_USER: ${POSTGRES_USER:-testuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-testpassword}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - target: 5432
        published: ${POSTGRES_PORT:-5432}
        protocol: tcp
        mode: ingress
    networks:
      - dbnet
    deploy:
      replicas: ${DB_REPLICAS:-1}
      placement:
        constraints:
          - node.labels.role_db == true
      update_config:
        parallelism: ${DB_PARALLELISM:-1}
        delay: 10s
      restart_policy:
        condition: on-failure

  redis:
    image: redis:latest
    command:
      [
        'redis-server',
        '--requirepass',
        '${REDIS_PASSWORD:-your_secure_password}',
      ]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-your_secure_password}
    ports:
      - target: 6379
        published: ${REDIS_PORT:-6379}
        protocol: tcp
        mode: ingress
    networks:
      - dbnet
    volumes:
      - redisdata:/data
    deploy:
      replicas: ${REDIS_REPLICAS:-1}
      placement:
        constraints:
          - node.labels.role_db == true
      update_config:
        parallelism: ${REDIS_PARALLELISM:-1}
        delay: 10s
      restart_policy:
        condition: on-failure

networks:
  webnet:
  dbnet:

volumes:
  pgdata:
    driver: local
  redisdata:
    driver: local
