{
  "name": "@vegangouda/source",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "start": "docker-compose -f docker-compose.base.yml up postgres && nx run-many --target=serve --projects=api,web",
    "web": "nx run web:serve",
    "api": "nx run api:serve",
    "build:api": "dotenv --file .env.local -- docker build -t vegangouda-api -f Dockerfile.api .",
    "build:web": "dotenv --file .env.local -- docker build -t vegangouda-web -f Dockerfile.web .",
    "build:all": "npm run build:api && npm run build:web",
    "push:api": "dotenv --file .env.local -- docker push vegangouda-api:latest",
    "push:web": "dotenv --file .env.local -- docker push vegangouda-web:latest",
    "push:images": "npm run push:api && npm run push:web",
    "build:all:push": "npm run ensure-executable && ./build_and_push_to_registry.sh",
    "ensure-executable": "chmod +x ./build_and_push_to_registry.sh",
    "start:local": "API_REPLICAS=1 API_PARALLELISM=1 WEB_REPLICAS=1 WEB_PARALLELISM=2 DB_REPLICAS=1 DB_PARALLELISM=1 dotenv --file .env.local -- docker compose -f docker-compose.base.yml -f docker-compose.local.yml up",
    "stop:local": "dotenv --file .env.local -- docker compose -f docker-compose.base.yml -f docker-compose.local.yml down",
    "rebuild": "npm run build:all && npm run start:local",
    "start:portainer": "dotenv --file .env.local -- docker stack deploy -c docker-compose.portainer.yml portainer",
    "stop:portainer": "dotenv --file .env.local -- docker stack rm portainer",
    "storybook": "nx run web:storybook --serve",
    "generate-types": "ts-node tools/type-generator/index.ts",
    "_:start:swarm": "echo 'Deprecated: Use Portainer to deploy stacks. Original command: docker stack rm vegangouda && docker network prune -f && NODE_ENV=production API_REPLICAS=1 API_PARALLELISM=1 WEB_REPLICAS=1 WEB_PARALLELISM=1 DB_REPLICAS=1 DB_PARALLELISM=1 docker stack deploy -c docker-compose.base.yml vegangouda'",
    "_:stop:swarm": "echo 'Deprecated: Use Portainer to manage stacks. Original command: docker stack rm vegangouda'",
    "_:update:swarm": "echo 'Deprecated: Use Portainer to update services. Original commands: npm run update:swarm:api && npm run update:swarm:web && npm run update:swarm:db'",
    "_:update:swarm:api": "echo 'Deprecated: Use Portainer to update services. Original command: dotenv --file .env.local -- docker service update --image $REGISTRY_IP:5000/vegangouda-api:latest vegangouda_api'",
    "_:update:swarm:web": "echo 'Deprecated: Use Portainer to update services. Original command: dotenv --file .env.local -- docker service update --image $REGISTRY_IP:5000/vegangouda-web:latest vegangouda_web'",
    "_:update:swarm:db": "echo 'Deprecated: Use Portainer to update services. Original command: dotenv --file .env.local -- docker service update --image postgres:latest vegangouda_db'"
  },
  "private": true,
  "dependencies": {
    "@emotion/react": "^11.11.1",
    "@emotion/styled": "^11.11.0",
    "@fastify/autoload": "~5.7.1",
    "@fastify/cors": "^8.3.0",
    "@fastify/sensible": "~5.2.0",
    "@hapi/joi": "^17.1.1",
    "@hookform/resolvers": "^3.1.1",
    "@mui/lab": "^5.0.0-alpha.137",
    "@mui/material": "^5.14.2",
    "@react-hook/resize-observer": "^1.2.6",
    "@swc/helpers": "~0.5.0",
    "@types/bcrypt": "^5.0.2",
    "axios": "^1.4.0",
    "bcrypt": "^5.1.0",
    "bowser": "^2.11.0",
    "fastify": "~4.13.0",
    "fastify-cors": "^6.1.0",
    "fastify-plugin": "~4.5.0",
    "joi": "^17.9.2",
    "jsonwebtoken": "^9.0.2",
    "pg": "^8.11.1",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-hook-form": "^7.45.2",
    "react-merge-refs": "^2.0.2",
    "react-native": "0.71.10",
    "react-router-dom": "6.11.2",
    "react-use-intercom": "^5.1.4",
    "tslib": "^2.3.0"
  },
  "devDependencies": {
    "@babel/preset-react": "^7.14.5",
    "@nx/cypress": "16.5.5",
    "@nx/detox": "16.5.5",
    "@nx/esbuild": "16.5.5",
    "@nx/eslint-plugin": "16.5.5",
    "@nx/jest": "16.5.5",
    "@nx/js": "16.5.5",
    "@nx/linter": "16.5.5",
    "@nx/node": "16.5.5",
    "@nx/react": "16.5.5",
    "@nx/storybook": "16.5.5",
    "@nx/web": "16.5.5",
    "@nx/webpack": "16.5.5",
    "@nx/workspace": "16.5.5",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.7",
    "@react-native-community/cli": "10.2.2",
    "@react-native-community/cli-platform-android": "10.2.0",
    "@react-native-community/cli-platform-ios": "10.2.1",
    "@storybook/addon-essentials": "^7.0.24",
    "@storybook/core-common": "^7.0.24",
    "@storybook/core-server": "^7.0.24",
    "@storybook/react-webpack5": "^7.0.24",
    "@svgr/webpack": "^8.0.1",
    "@swc/cli": "~0.1.62",
    "@swc/core": "~1.3.51",
    "@testing-library/jest-dom": "5.16.5",
    "@testing-library/jest-native": "5.4.2",
    "@testing-library/react": "14.0.0",
    "@testing-library/react-native": "12.1.2",
    "@types/jest": "^29.4.0",
    "@types/node": "18.14.4",
    "@types/react": "18.2.14",
    "@types/react-dom": "18.2.6",
    "@types/react-native": "0.71.7",
    "@typescript-eslint/eslint-plugin": "^5.60.1",
    "@typescript-eslint/parser": "^5.60.1",
    "babel-jest": "^29.4.1",
    "concurrently": "^8.2.0",
    "cypress": "^12.16.0",
    "detox": "^20.9.0",
    "dotenv-cli": "^7.4.2",
    "esbuild": "^0.17.17",
    "eslint": "~8.15.0",
    "eslint-config-prettier": "8.1.0",
    "eslint-plugin-cypress": "^2.10.3",
    "eslint-plugin-import": "2.27.5",
    "eslint-plugin-jsx-a11y": "6.7.1",
    "eslint-plugin-react": "7.32.2",
    "eslint-plugin-react-hooks": "4.6.0",
    "jest": "^29.4.1",
    "jest-circus": "^29.4.1",
    "jest-environment-jsdom": "^29.4.1",
    "jest-environment-node": "^29.4.1",
    "jest-react-native": "18.0.0",
    "joi-to-typescript": "^4.4.1",
    "metro": "0.74.1",
    "metro-babel-register": "0.74.1",
    "metro-react-native-babel-preset": "0.74.1",
    "metro-react-native-babel-transformer": "0.74.1",
    "metro-resolver": "0.74.1",
    "nx": "16.5.5",
    "nx-cloud": "latest",
    "prettier": "^2.6.2",
    "react-native-svg": "13.9.0",
    "react-native-svg-transformer": "1.0.0",
    "react-refresh": "^0.10.0",
    "react-test-renderer": "18.2.0",
    "ts-jest": "^29.1.0",
    "ts-node": "10.9.1",
    "typescript": "~5.1.3",
    "url-loader": "^4.1.1",
    "verdaccio": "^5.0.4"
  },
  "nx": {
    "includedScripts": []
  }
}
